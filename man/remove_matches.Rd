% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_host.R
\name{remove_matches}
\alias{remove_matches}
\title{Helper function to remove reads matched to filter libraries}
\usage{
remove_matches(reads_bam, read_names, output, YS, threads, aligner, make_bam)
}
\arguments{
\item{reads_bam}{The name of a merged, sorted .bam file that has previously
been aligned to a reference library. Likely, the output from running an
instance of \code{align_target()}.}

\item{read_names}{A \code{list} of target query names from \code{reads_bam}
that have also aligned to a filter reference library. Each \code{list}
element should be a vector of read names.}

\item{output}{The desired name of the output .bam or .rds file. Extension
is automatically defined by whether \code{make_bam = TRUE.} Default is
the basename of \code{unfiltered_bam} + \code{.filtered} + extension.}

\item{threads}{The number of threads to be used in filtering the bam file.}

\item{aligner}{The aligner which was used to create the bam file.}

\item{make_bam}{Logical, whether to also output a bam file with host reads
filtered out. An rds file will be created instead if \code{FALSE}.
Default is \code{FALSE}.}

\item{name_out}{The name of the .bam or .rds file that to which the filtered
alignments will be written.}
}
\value{
Depending on input \code{make_bam}, either the name of a filtered,
sorted .bam file written to the user's current working directory, or
an RDS file containing a data frame of only requisite information to run
\code{metascope_id()}.
}
\description{
Within the \code{filter_host()} function, we align our sequencing sample to all
filter libraries of interest. The \code{remove_matches()} function allows
for removal of any target reads that are also aligned to filter libraries.
}
\details{
This function is not intended for direct use.
}
\examples{

#readPath <- system.file("extdata", "subread_target.bam",
#                        package = "MetaScope")

## Assume that the first 10 query names aligned to first filter library
## And another 10 aligned to second filter library
# qnames <- Rsamtools::scanBam(readPath)[[1]]$qname
# read_names <- list(qnames[1:10], qnames[30:40])
# out <- "subread_target.filtered.bam"

# remove_matches_bam(readPath, read_names, out, YS = 1000, threads = 1,
                 aligner = "subread", make_bam = FALSE)

}
